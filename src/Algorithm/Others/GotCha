// IMPORTANT: Do not use `stack.peek() == minStack.peek()`, it will return false when both are -1024
// BECAUSE: stack.peek() return `Integer` instead of `int`. For Integer = -1024, integerA == integerB will return false wile integerA.equal(integerB) == true
// alternatively you can do:

int foo = stack.peek(); // Convert Integer to int
int bar = minStack.peek();  // Convert Integer to int
if (foo == bar) ...

// OR

if (stack.peek().equals(minStack.peek())) ...

// Note that we must use ! .equals instead of !=
// because we are comparing Integer, not int.

// Try to run:
int foo = -1024;
int bar = -1024;
System.out.println(foo == bar); // true

Integer foo1 = -1024;
Integer bar1 = -1024;
System.out.println(foo1 == bar1); // false

-------------------------------

TreeNode left = root.left;
TreeNode right = root.right;

TreeNode temp = left;
left = right;
right = temp;

// This is NOT true:
root.left == left;
root.right == right;

// This is ture:
root.left == right;
root.right == left;

// BUT root.left and root.right is not swapped!!!!!
